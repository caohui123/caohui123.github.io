<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Symfony2之创建一个简单的web应用]]></title>
      <url>http://www.caohui.tk/2016/07/19/Symfony2-web-app-develop/</url>
      <content type="html"><![CDATA[<p>Symfony2——创建bundle</p>
<p>bundle就像插件或者一个功能齐全的应用，我们在应用层上开发的应用的所有代码，包括：PHP文件、配置文件、图片、css文件、js文件等都会包含在bunde系统中。</p>
<p>可以通过两种方法创建bundle，一种是通过命令行创建，一种是通过手动创建相应的文件和文件夹。<br><a id="more"></a><br>一：通过命令行创建，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php app/console generate:bundle --namespace=Acme/HelloBundle --format=yml</div></pre></td></tr></table></figure></p>
<p>执行以上命令 src/Acme/HelloBundle 被创建，指定使用的配置文件格式yml（还可以使用xml和php），同时自动在 app/AppKernel.php 添加一行代码，使得bundle注册到kernel。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//app/AppKernel.php</div><div class="line">  public <span class="keyword">function</span> <span class="function"><span class="title">registerBundles</span></span>()</div><div class="line">      &#123;</div><div class="line">          <span class="variable">$bundles</span> = array(</div><div class="line">             ...,</div><div class="line">              new Acme\HelloBundle\AcmeHelloBundle(),</div><div class="line">          );</div><div class="line">          <span class="built_in">return</span> <span class="variable">$bundles</span>;</div><div class="line">      &#125;</div></pre></td></tr></table></figure></p>
<p>Symfony2——创建一个简单的web应用（配置文件均已yml为例）</p>
<p>step 1：创建路由地址<br>    路由的默认配置文件  app/config/routing.yml ，打开该文件你会看到当你创建bundle的时候，Symfony已经在该文件中添加了 AcmeHelloBundle路由配置文件的入口，该入口会告诉Symfony到哪里加载AcmeHelloBundle的路由配置。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#app/config/routing.yml</span></div><div class="line">acme_hello:</div><div class="line">    resource: <span class="string">"@AcmeHelloBundle/Resources/config/routing.yml"</span></div><div class="line">    <span class="built_in">type</span>:     annotation</div></pre></td></tr></table></figure></p>
<p>打开 Resources/config/routing.yml 定义URL对应的执行的控制器。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src/Acme/HelloBundle/Resources/config/routing.yml</span></div><div class="line">hello:</div><div class="line">    path: /hello/&#123;name&#125;</div><div class="line">    defaults: &#123; _controller:AcmeHelloBundle:hello:index &#125;</div></pre></td></tr></table></figure></p>
<p> 路由设置包含了两方面，path对应了相应的URL，defaults指向URL执行的controller。占位符{name}是一个通配符，用来匹配URL中，如：/hello/jc 或者 /hello/jack 的 jc 或者 jack ，同时匹配的值作为参数传入到indexAction方法中。</p>
<p>step 2：创建controller</p>
<p>web应用系统解析相应的URL，交由symfony框架执行相应的controller（AcmeHelloBundle:Hello:index），该controller对应的是Acme\HelloBundle\Controller\Hellotroller类中的indexAction方法。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//src/Acme/HelloBundle/Controller/HelloController.php</div><div class="line">   namespace Acme\HelloBundle\Controller;</div><div class="line">   class HelloController&#123;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>controller其实就是一个PHP方法，该方法由我们去创建，symfony能够执行的方法。<br>    编写indexAction方法，并返回Response对象，最后由symfony框架输出Response对象。（Response类是Symfony框架提供的）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//src/Acme/HelloBundle/Controller/HelloController.php</div><div class="line">   namespace Acme\HelloBundle\Controller;</div><div class="line">   use Symfony\Component\HttpFoundation\Response;</div><div class="line">   </div><div class="line">   class HelloController&#123;</div><div class="line">    public <span class="keyword">function</span> indexAction(<span class="variable">$name</span>)</div><div class="line">       &#123;</div><div class="line">           // replace this example code with whatever you need</div><div class="line">           <span class="built_in">return</span> new Response(<span class="string">'&lt;html&gt;&lt;body&gt;Hello'</span>.<span class="variable">$name</span>.<span class="string">'!&lt;/body&gt;&lt;/html&gt;'</span>);</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>  其中indexAction中$name参数是配置文件中 path 里面的占位符{name}，<a href="http://localhost/app_dev.php/hello/Ryan可以看到相应的输出结果。" target="_blank" rel="external">http://localhost/app_dev.php/hello/Ryan可以看到相应的输出结果。</a></p>
<p>step 3：创建输出模板</p>
<pre><code class="bash">
</code></pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[github绑定自定义域名]]></title>
      <url>http://www.caohui.tk/2016/07/18/coding-me/</url>
      <content type="html"><![CDATA[<p>1、在source文件夹中新建一个CNAME文件（无后缀名），然后用文本编辑器打开，在首行添加你的网站域名，如<a href="http://xxxx.com，注意前面没有http://，也没有www，然后使用hexo" target="_blank" rel="external">http://xxxx.com，注意前面没有http://，也没有www，然后使用hexo</a> g &amp;&amp; hexo d上传部署。<br><a id="more"></a><br>2、在域名解析提供商，下面以dnspod为例。<br>（1）先添加一个CNAME，主机记录写@，后面记录值写上你的<a href="http://xxxx.github.io" target="_blank" rel="external">http://xxxx.github.io</a><br>（2）再添加一个CNAME，主机记录写www，后面记录值也是<a href="http://xxxx.github.io" target="_blank" rel="external">http://xxxx.github.io</a><br>这样别人用www和不用www都能访问你的网站（其实www的方式，会先解析成<a href="http://xxxx.github.io，然后根据CNAME再变成http://xxx.com，即中间是经过一次转换的）。" target="_blank" rel="external">http://xxxx.github.io，然后根据CNAME再变成http://xxx.com，即中间是经过一次转换的）。</a></p>
<p>上面，我们用的是CNAME别名记录，也有人使用A记录，后面的记录值是写github page里面的ip地址，但有时候IP地址会更改，导致最后解析不正确，所以还是推荐用CNAME别名记录要好些，不建议用IP。<br>3、等十分钟左右，刷新浏览器，用你自己域名访问下试试</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何 clone git 项目到一个非空目录]]></title>
      <url>http://www.caohui.tk/2016/07/17/git-empty-directory/</url>
      <content type="html"><![CDATA[<p>如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：</p>
<p>fatal: destination path ‘.’ already exists and is not an empty directory.<br><a id="more"></a><br>解决的办法是：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> git</div><div class="line">$ git <span class="built_in">clone</span> --no-checkout https://git.oschina.net/NextApp/blog.git tmp</div><div class="line">$ mv tmp/.git .   <span class="comment">#将 tmp 目录下的 .git 目录移到当前目录</span></div><div class="line">$ rmdir tmp</div><div class="line">$ git reset --hard HEAD</div></pre></td></tr></table></figure>
<p>然后就可以进行各种正常操作了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[黄杰搬家，累...]]></title>
      <url>http://www.caohui.tk/2016/07/17/jiss-move/</url>
      <content type="html"><![CDATA[<p>黄杰搬家，好多东西   从白石洲搬到了布吉，他是有了自己的房子  爽啊  ，忘记拍他的新房子的照片了，下次补上<br><img title="搬家的东西1" alt="搬家的东西" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/jiss_move/IMG_20160717_092108.jpg?imageView2/2/w/600"><br><a id="more"></a><br><img title="搬家的东西2" alt="搬家的东西" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/jiss_move/IMG_20160717_112225.jpg?imageView2/2/w/600"><br>上车的东西，拍不全，但是还是蛮多了<br><img title="搬家的东西3" alt="搬家的东西" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/jiss_move/IMG_20160717_112236.jpg?imageView2/2/w/600"><br><img title="搬家的东西4" alt="搬家的东西" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/jiss_move/IMG_20160717_092113.jpg?imageView2/2/w/600"><br><img title="搬家的东西5" alt="搬家的东西" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/jiss_move/IMG_20160717_092117.jpg?imageView2/2/w/600"><br>他家的照片来了<br><img title="新家" alt="新家" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/jiss_move/jiss.jpg?imageView2/2/w/600"></p>
]]></content>
    </entry>
    
  
  
</search>
