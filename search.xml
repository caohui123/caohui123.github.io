<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[要嫁就嫁程序猿 --钱多话少死的早]]></title>
      <url>http://www.caohui.tk/2016/07/22/programmer-joke/</url>
      <content type="html"><![CDATA[<p>一、</p>
<p>程序猿问科比：“你为什么这么成功？ ”<br>科比：“你知道洛杉矶凌晨四点是什么样子吗？ ”<br>程序猿：“知道，一般那个时候我还在写代码，怎么了？”<br>科比：“额…….”<br><a id="more"></a><br>二、</p>
<p>女神：你能让这个论坛的人都吵起来，我今晚就跟你走。<br>程序猿：PHP语言是最好的语言！<br>论坛炸锅了，各种吵架。<br>女神：服了你了，我们走吧，你想干啥都行。<br>程序猿：今天不行，我一定要说服他们，PHP语言是最好的语言。<br><img title="图1" alt="图1" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/programmer_joke/1.png?imageView2/2/w/600"></p>
<p>三、</p>
<p>我是一个苦b的程序员，今晚加班到快通宵了，困得快睁不开眼了，女上司很关心，问我要不要吃宵夜。我没好气地说，宵夜就算了，能让我睡一觉就行了。女上司红着脸说了句讨厌啊，然后坐在我身边不动，好像距离我很近，搞得我很紧张，难道她发现我的程序出了bug？</p>
<p>四、</p>
<p>老公一定要找程序员！！！！！！<br>钱多话少死的早</p>
<img title="图2" alt="图2" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/programmer_joke/2.png?imageView2/2/w/600">
<p>五、</p>
<p>老婆给当程序员的老公打电话：“下班顺路买一斤包子带回来，如果看到卖西瓜的，就买一个。”</p>
<p>当晚，程序员老公手捧一个包子进了家门……</p>
<p>老婆怒道：“你怎么就买了一个包子？！”</p>
<p>老公答曰：“因为看到了卖西瓜的。”</p>
<p>六、<br><img title="图3" alt="图3" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/programmer_joke/3.png?imageView2/2/w/600"></p>
<p>七、</p>
<p>某人发帖子：“各位JR，我想做一个程序猿，请问有什么要注意的……”<br>某猿：“等我下班跟你细说……”</p>
<p>然后……就没有然后了</p>
<p>八、</p>
<img title="图4" alt="图4" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/programmer_joke/4.png?imageView2/2/w/600">
<p>我问程序员朋友借了1000，他说再多借你24吧，凑个整</p>
<p>九、</p>
<p>程序员A: “我吃鱼香肉丝盖饭, 你吃什么?”<br>程序员B: “宫保鸡丁盖饭.”<br>程序员A 在点菜单写上：<br>鱼香肉丝盖饭 1<br>宫保鸡丁盖饭 1<br>程序员B: “我还是要牛肉面吧!”<br>程序员A 更正点菜单:<br>鱼香肉丝盖饭 1<br>// 宫保鸡丁盖饭 1<br>牛肉面 1</p>
<p>十、</p>
<p>我是一个程序猿，一天我坐在路边一边喝水一边苦苦检查bug，这时一个乞丐在我边上坐下了，开始要饭，我觉得他可怜，就给了他一块钱，然后接着调试程序。他可能生意不好，就无聊的看看我在干什么，然后过了一会，他幽幽说，这里少了一个分号。</p>
<p>我惊奇的问：“你也懂这行啊” 乞丐说：“我以前就是做这个的。”</p>
<p>十一、</p>
<p>某程序员退休后决定练习书法，于是重金购买文房四宝。一日，饭后突生雅兴，一番研墨拟纸，并点上上好檀香。定神片刻，泼墨挥毫，郑重地写下一行字：hello world！</p>
<p>十二、</p>
<p>搞IT太辛苦了，想换一行怎么办？”“敲一下Enter键。”</p>
<p>十三、</p>
<p>程序员不喜欢乾隆的第八个儿子，因为八阿哥 bug</p>
<p>十四、</p>
<p>一女同学在食堂吃饭时，一程序猿凑到旁边，“同学，我能和你说话不，我已经一个月没和女生说话了。</p>
<p>十五、</p>
<p>两个程序员在聊天：“我昨天碰到个辣妹。我把她带回家，马上就开始如饥似渴地亲吻，她就坐在我的键盘上，然后……”“你在家里也有台电脑？CPU是什么型号的？”</p>
<p>十六、</p>
<p>程序员的读书历程：x 语言入门 —&gt; x 语言应用实践 —&gt; x 语言高阶编程 —&gt; x 语言的科学与艺术 —&gt; 编程之美 —&gt; 编程之道 —&gt; 编程之禅—&gt; 颈椎病康复指南。</p>
<p>(整理自网络)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[mysql同时使用order by和limit查询时的一个严重隐患 -- 丢失数据]]></title>
      <url>http://www.caohui.tk/2016/07/20/mysql-order-by-limit-quest/</url>
      <content type="html"><![CDATA[<p>我经常使用order by和limit来做数据分页显示并排序，一直也没发现过什么问题。但这两天缺遇到一个严重的问题，在按时间戳升序排列并用limit分批读取数据时，却发现在某些记录丢失了，表中明明有的记录确死活读取不到。研究了大半天终于发现了问题所在，记录一下以防忘记，也是给大家提个醒。<br><a id="more"></a><br><strong>问题重现</strong></p>
<p><em>工具和原料</em></p>
<p><code>数据库：</code></p>
<p>Ver 14.14 Distrib 5.6.11, for Linux (x86_64) using EditLine wrapper</p>
<p><code>表结构：</code></p>
<table>
<thead>
<tr>
<th>字段</th>
<th style="text-align:center">类型</th>
<th style="text-align:right">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td style="text-align:center">int(10)</td>
<td style="text-align:right">主键</td>
</tr>
<tr>
<td>pay_time</td>
<td style="text-align:center">int(10)</td>
<td style="text-align:right">时间戳，有索引</td>
</tr>
<tr>
<td>flag</td>
<td style="text-align:center">tinyint(1)</td>
<td style="text-align:right">类型标识，用于分类筛选</td>
</tr>
</tbody>
</table>
<p><code>数据</code></p>
<p>大概5000条数据， 大部分记录的flag都等于0，pay_time字段时间戳格式都正确</p>
<p><code>需求</code></p>
<p>筛选出flag=0的记录，按pay_time升序依次读取所有数据。</p>
<p><code>处理方式</code></p>
<p>使用limit分批读取数据，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select id, pay_time from order_customer_new where flag=0 order by pay_time asc, id asc limit 250, 10;</div></pre></td></tr></table></figure></p>
<p><code>发现问题</code></p>
<p>在读取数据的过程中，发现有时间戳相等的记录，分两次读取出来时，可能会丢失一条记录。见下图，id=465的记录就丢失了。</p>
<img title="图1" alt="图1" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/mysql_bug/1.jpg?imageView2/2/w/600">
<img title="图2" alt="图2" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/mysql_bug/2.jpg?imageView2/2/w/600">
<p>这里写图片描述</p>
<p>问题分析与猜测</p>
<p>当排序值相等，其先后顺序的不确定的。这里我猜想：当465和466处于limit末尾时466排在前面，而当处于limit开头时，466缺排到后面去了。所以465丢失了，466出现了两次。<br>排序值相等时，其顺序的不确定应该是其结果不可预测。但真正进行排序时应该会采取一定的规则以确定唯一的排序结果，也就是说，即使有相等的排序值，多次排序的结果应该是一样的。从以前的使用经历看，mysql是这么做的。但这次遇到的问题似乎说明mysql并不是这样的。不知道mysql本来就是如此，还是一个bug。</p>
<p><strong>解决办法</strong></p>
<p>既然猜想此问题是因为排序值相等造成顺序不确定引起的，那么就试试增加排序条件让其排序结果是确定的、唯一的。一试果然OK，如下图所示，465出来了。</p>
<p>这里写图片描述<br><img title="图3" alt="图3" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/mysql_bug/3.jpg?imageView2/2/w/600"><br><code>请求支援</code></p>
<p>我对mysql的底层实现和数据库原理不是很了解，完全不明白mysql为什么会出现这种问题。若哪位朋友能解释一二，不胜感激！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Symfony2之创建一个简单的web应用]]></title>
      <url>http://www.caohui.tk/2016/07/19/Symfony2-web-app-develop/</url>
      <content type="html"><![CDATA[<p>Symfony2——创建bundle</p>
<p>bundle就像插件或者一个功能齐全的应用，我们在应用层上开发的应用的所有代码，包括：PHP文件、配置文件、图片、css文件、js文件等都会包含在bunde系统中。</p>
<p>可以通过两种方法创建bundle，一种是通过命令行创建，一种是通过手动创建相应的文件和文件夹。<br><a id="more"></a><br>一：通过命令行创建，如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ php app/console generate:bundle --namespace=Acme/HelloBundle --format=yml</div></pre></td></tr></table></figure></p>
<p>执行以上命令 src/Acme/HelloBundle 被创建，指定使用的配置文件格式yml（还可以使用xml和php），同时自动在 app/AppKernel.php 添加一行代码，使得bundle注册到kernel。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//app/AppKernel.php</div><div class="line">  public <span class="keyword">function</span> <span class="function"><span class="title">registerBundles</span></span>()</div><div class="line">      &#123;</div><div class="line">          <span class="variable">$bundles</span> = array(</div><div class="line">             ...,</div><div class="line">              new Acme\HelloBundle\AcmeHelloBundle(),</div><div class="line">          );</div><div class="line">          <span class="built_in">return</span> <span class="variable">$bundles</span>;</div><div class="line">      &#125;</div></pre></td></tr></table></figure></p>
<p>Symfony2——创建一个简单的web应用（配置文件均已yml为例）</p>
<p>step 1：创建路由地址<br>    路由的默认配置文件  app/config/routing.yml ，打开该文件你会看到当你创建bundle的时候，Symfony已经在该文件中添加了 AcmeHelloBundle路由配置文件的入口，该入口会告诉Symfony到哪里加载AcmeHelloBundle的路由配置。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#app/config/routing.yml</span></div><div class="line">acme_hello:</div><div class="line">    resource: <span class="string">"@AcmeHelloBundle/Resources/config/routing.yml"</span></div><div class="line">    <span class="built_in">type</span>:     annotation</div></pre></td></tr></table></figure></p>
<p>打开 Resources/config/routing.yml 定义URL对应的执行的控制器。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#src/Acme/HelloBundle/Resources/config/routing.yml</span></div><div class="line">hello:</div><div class="line">    path: /hello/&#123;name&#125;</div><div class="line">    defaults: &#123; _controller:AcmeHelloBundle:hello:index &#125;</div></pre></td></tr></table></figure></p>
<p> 路由设置包含了两方面，path对应了相应的URL，defaults指向URL执行的controller。占位符{name}是一个通配符，用来匹配URL中，如：/hello/jc 或者 /hello/jack 的 jc 或者 jack ，同时匹配的值作为参数传入到indexAction方法中。</p>
<p>step 2：创建controller</p>
<p>web应用系统解析相应的URL，交由symfony框架执行相应的controller（AcmeHelloBundle:Hello:index），该controller对应的是Acme\HelloBundle\Controller\Hellotroller类中的indexAction方法。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//src/Acme/HelloBundle/Controller/HelloController.php</div><div class="line">   namespace Acme\HelloBundle\Controller;</div><div class="line">   class HelloController&#123;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>controller其实就是一个PHP方法，该方法由我们去创建，symfony能够执行的方法。<br>    编写indexAction方法，并返回Response对象，最后由symfony框架输出Response对象。（Response类是Symfony框架提供的）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">//src/Acme/HelloBundle/Controller/HelloController.php</div><div class="line">   namespace Acme\HelloBundle\Controller;</div><div class="line">   use Symfony\Component\HttpFoundation\Response;</div><div class="line">   </div><div class="line">   class HelloController&#123;</div><div class="line">    public <span class="keyword">function</span> indexAction(<span class="variable">$name</span>)</div><div class="line">       &#123;</div><div class="line">           // replace this example code with whatever you need</div><div class="line">           <span class="built_in">return</span> new Response(<span class="string">'&lt;html&gt;&lt;body&gt;Hello'</span>.<span class="variable">$name</span>.<span class="string">'!&lt;/body&gt;&lt;/html&gt;'</span>);</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>  其中indexAction中$name参数是配置文件中 path 里面的占位符{name}，<a href="http://localhost/app_dev.php/hello/Ryan可以看到相应的输出结果。" target="_blank" rel="external">http://localhost/app_dev.php/hello/Ryan可以看到相应的输出结果。</a></p>
<p>step 3：创建输出模板</p>
<pre><code class="bash">
</code></pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[github绑定自定义域名]]></title>
      <url>http://www.caohui.tk/2016/07/18/coding-me/</url>
      <content type="html"><![CDATA[<p>1、在source文件夹中新建一个CNAME文件（无后缀名），然后用文本编辑器打开，在首行添加你的网站域名，如<a href="http://xxxx.com，注意前面没有http://，也没有www，然后使用hexo" target="_blank" rel="external">http://xxxx.com，注意前面没有http://，也没有www，然后使用hexo</a> g &amp;&amp; hexo d上传部署。<br><a id="more"></a><br>2、在域名解析提供商，下面以dnspod为例。<br>（1）先添加一个CNAME，主机记录写@，后面记录值写上你的<a href="http://xxxx.github.io" target="_blank" rel="external">http://xxxx.github.io</a><br>（2）再添加一个CNAME，主机记录写www，后面记录值也是<a href="http://xxxx.github.io" target="_blank" rel="external">http://xxxx.github.io</a><br>这样别人用www和不用www都能访问你的网站（其实www的方式，会先解析成<a href="http://xxxx.github.io，然后根据CNAME再变成http://xxx.com，即中间是经过一次转换的）。" target="_blank" rel="external">http://xxxx.github.io，然后根据CNAME再变成http://xxx.com，即中间是经过一次转换的）。</a></p>
<p>上面，我们用的是CNAME别名记录，也有人使用A记录，后面的记录值是写github page里面的ip地址，但有时候IP地址会更改，导致最后解析不正确，所以还是推荐用CNAME别名记录要好些，不建议用IP。<br>3、等十分钟左右，刷新浏览器，用你自己域名访问下试试</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何 clone git 项目到一个非空目录]]></title>
      <url>http://www.caohui.tk/2016/07/17/git-empty-directory/</url>
      <content type="html"><![CDATA[<p>如果我们往一个非空的目录下 clone git 项目，就会提示错误信息：</p>
<p>fatal: destination path ‘.’ already exists and is not an empty directory.<br><a id="more"></a><br>解决的办法是：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> git</div><div class="line">$ git <span class="built_in">clone</span> --no-checkout https://git.oschina.net/NextApp/blog.git tmp</div><div class="line">$ mv tmp/.git .   <span class="comment">#将 tmp 目录下的 .git 目录移到当前目录</span></div><div class="line">$ rmdir tmp</div><div class="line">$ git reset --hard HEAD</div></pre></td></tr></table></figure>
<p>然后就可以进行各种正常操作了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[黄杰搬家，累...]]></title>
      <url>http://www.caohui.tk/2016/07/17/jiss-move/</url>
      <content type="html"><![CDATA[<p>黄杰搬家，好多东西   从白石洲搬到了布吉，他是有了自己的房子  爽啊  ，忘记拍他的新房子的照片了，下次补上<br><img title="搬家的东西1" alt="搬家的东西" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/jiss_move/IMG_20160717_092108.jpg?imageView2/2/w/600"><br><a id="more"></a><br><img title="搬家的东西2" alt="搬家的东西" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/jiss_move/IMG_20160717_112225.jpg?imageView2/2/w/600"><br>上车的东西，拍不全，但是还是蛮多了<br><img title="搬家的东西3" alt="搬家的东西" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/jiss_move/IMG_20160717_112236.jpg?imageView2/2/w/600"><br><img title="搬家的东西4" alt="搬家的东西" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/jiss_move/IMG_20160717_092113.jpg?imageView2/2/w/600"><br><img title="搬家的东西5" alt="搬家的东西" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/jiss_move/IMG_20160717_092117.jpg?imageView2/2/w/600"><br>他家的照片来了<br><img title="新家" alt="新家" class="class1 class2" src="http://7xwgv3.com1.z0.glb.clouddn.com/static/images/jiss_move/jiss.jpg?imageView2/2/w/600"></p>
]]></content>
    </entry>
    
  
  
</search>
